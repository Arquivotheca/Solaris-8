/* LINTLIBRARY */
/* PROTOLIB1 */

/*
 * Copyright (c) 1998 by Sun Microsystems, Inc. 
 * All rights reserved. 
 */ 

#pragma ident	"@(#)llib-lelf	1.3	98/08/28 SMI"

/*
 * Generic interface definition for usr/src/lib/libelf.
 */

#include <libelf.h>
#include <gelf.h>
#include <nlist.h>


/*
 * Elf32 Symbols
 */
size_t		elf32_fsize(Elf_Type, size_t, unsigned);
size_t		_elf32_fsize(Elf_Type, size_t, unsigned);
Elf32_Ehdr *	elf32_getehdr(Elf *);
Elf32_Ehdr *	_elf32_getehdr(Elf *);
Elf32_Phdr *	elf32_getphdr(Elf *);
Elf32_Phdr *	_elf32_getphdr(Elf *);
Elf32_Shdr *	elf32_getshdr(Elf_Scn *);
Elf32_Shdr *	_elf32_getshdr(Elf_Scn *);
Elf32_Ehdr *	elf32_newehdr(Elf *);
Elf32_Ehdr *	_elf32_newehdr(Elf *);
Elf32_Phdr *	elf32_newphdr(Elf *, size_t);
Elf32_Phdr *	_elf32_newphdr(Elf *, size_t);
Elf_Data *	elf32_xlatetof(Elf_Data *, const Elf_Data *, unsigned);
Elf_Data *	_elf32_xlatetof(Elf_Data *, const Elf_Data *, unsigned);
Elf_Data *	elf32_xlatetom(Elf_Data *, const Elf_Data *, unsigned);
Elf_Data *	_elf32_xlatetom(Elf_Data *, const Elf_Data *, unsigned);


/*
 * Elf64 Symbols
 */
size_t		elf64_fsize(Elf_Type, size_t, unsigned);
Elf64_Ehdr *	elf64_getehdr(Elf *);
Elf64_Phdr *	elf64_getphdr(Elf *);
Elf64_Shdr *	elf64_getshdr(Elf_Scn *);
Elf64_Ehdr *	elf64_newehdr(Elf *);
Elf64_Phdr *	elf64_newphdr(Elf *, size_t);
Elf_Data *	elf64_xlatetof(Elf_Data *, const Elf_Data *, unsigned);
Elf_Data *	elf64_xlatetom(Elf_Data *, const Elf_Data *, unsigned);


/*
 * GElf Symbols
 */
size_t		gelf_fsize(Elf *, Elf_Type, size_t, unsigned);
int		gelf_getclass(Elf *);
GElf_Ehdr *	gelf_getehdr(Elf *, GElf_Ehdr *);
int		gelf_update_ehdr(Elf *, GElf_Ehdr *);
unsigned long	gelf_newehdr(Elf *, int);
GElf_Phdr *	gelf_getphdr(Elf *, int, GElf_Phdr *);
int		gelf_update_phdr(Elf *, int, GElf_Phdr *);
unsigned long	gelf_newphdr(Elf *, size_t);
GElf_Shdr *	gelf_getshdr(Elf_Scn *,  GElf_Shdr *);
int		gelf_update_shdr(Elf_Scn *, GElf_Shdr *);
Elf_Data *	gelf_xlatetof(Elf *, Elf_Data *, const Elf_Data *, unsigned);
Elf_Data *	gelf_xlatetom(Elf *, Elf_Data *, const Elf_Data *, unsigned);
GElf_Sym *	gelf_getsym(Elf_Data *, int, GElf_Sym *);
int		gelf_update_sym(Elf_Data *, int, GElf_Sym *);
GElf_Syminfo *	gelf_getsyminfo(Elf_Data *, int, GElf_Syminfo *);
int		gelf_update_syminfo(Elf_Data *, int, GElf_Syminfo *);
GElf_Move *	gelf_getmove(Elf_Data *, int, GElf_Move *);
int		gelf_update_move(Elf_Data *, int, GElf_Move *);
GElf_Dyn *	gelf_getdyn(Elf_Data *, int, GElf_Dyn *);
int		gelf_update_dyn(Elf_Data *, int, GElf_Dyn *);
GElf_Rela *	gelf_getrela(Elf_Data *, int, GElf_Rela *);
int		gelf_update_rela(Elf_Data *, int, GElf_Rela *);
GElf_Rel *	gelf_getrel(Elf_Data *, int, GElf_Rel *);
int		gelf_update_rel(Elf_Data *, int, GElf_Rel *);



/*
 * Class-Independent Elf Symbols
 */
Elf *		elf_begin(int, Elf_Cmd, Elf *);
Elf *		_elf_begin(int, Elf_Cmd, Elf *);
int		elf_cntl(Elf *, Elf_Cmd);
int		_elf_cntl(Elf *, Elf_Cmd);
int		elf_end(Elf *);
int		_elf_end(Elf *);
const char *	elf_errmsg(int);
const char *	_elf_errmsg(int);
int		elf_errno(void);
int		_elf_errno(void);
void		elf_fill(int);
void		_elf_fill(int);
unsigned	elf_flagdata(Elf_Data *, Elf_Cmd, unsigned);
unsigned	_elf_flagdata(Elf_Data *, Elf_Cmd, unsigned);
unsigned	elf_flagehdr(Elf *, Elf_Cmd,  unsigned);
unsigned	_elf_flagehdr(Elf *, Elf_Cmd,  unsigned);
unsigned	elf_flagelf(Elf *, Elf_Cmd,  unsigned);
unsigned	_elf_flagelf(Elf *, Elf_Cmd,  unsigned);
unsigned	elf_flagphdr(Elf *, Elf_Cmd,  unsigned);
unsigned	_elf_flagphdr(Elf *, Elf_Cmd,  unsigned);
unsigned	elf_flagscn(Elf_Scn *, Elf_Cmd, unsigned);
unsigned	_elf_flagscn(Elf_Scn *, Elf_Cmd, unsigned);
unsigned	elf_flagshdr(Elf_Scn *, Elf_Cmd, unsigned);
unsigned	_elf_flagshdr(Elf_Scn *, Elf_Cmd, unsigned);
Elf_Arhdr *	elf_getarhdr(Elf *);
Elf_Arhdr *	_elf_getarhdr(Elf *);
Elf_Arsym *	elf_getarsym(Elf *, size_t *);
Elf_Arsym *	_elf_getarsym(Elf *, size_t *);
off_t		elf_getbase(Elf *);
off_t		_elf_getbase(Elf *);
Elf_Data *	elf_getdata(Elf_Scn *, Elf_Data *);
Elf_Data *	_elf_getdata(Elf_Scn *, Elf_Data *);
char *		elf_getident(Elf *, size_t *);
char *		_elf_getident(Elf *, size_t *);
Elf_Scn *	elf_getscn(Elf *elf, size_t);
Elf_Scn *	_elf_getscn(Elf *elf, size_t);
unsigned long	elf_hash(const char *);
unsigned long	_elf_hash(const char *);
Elf_Kind	elf_kind(Elf *);
Elf_Kind	_elf_kind(Elf *);
Elf *		elf_memory(char *, size_t);
Elf *		_elf_memory(char *, size_t);
size_t		elf_ndxscn(Elf_Scn *);
size_t		_elf_ndxscn(Elf_Scn *);
Elf_Data *	elf_newdata(Elf_Scn *);
Elf_Data *	_elf_newdata(Elf_Scn *);
Elf_Scn *	elf_newscn(Elf *);
Elf_Scn *	_elf_newscn(Elf *);
Elf_Cmd		elf_next(Elf *);
Elf_Cmd		_elf_next(Elf *);
Elf_Scn *	elf_nextscn(Elf *, Elf_Scn *);
Elf_Scn *	_elf_nextscn(Elf *, Elf_Scn *);
size_t		_elf_outsync(int, char *, size_t, unsigned int);
size_t		elf_rand(Elf *, size_t);
size_t		_elf_rand(Elf *, size_t);
Elf_Data *	elf_rawdata(Elf_Scn *, Elf_Data *);
Elf_Data *	_elf_rawdata(Elf_Scn *, Elf_Data *);
char *		elf_rawfile(Elf *, size_t *);
char *		_elf_rawfile(Elf *, size_t *);
char *		elf_strptr(Elf *, size_t, size_t);
char *		_elf_strptr(Elf *, size_t, size_t);
off_t		elf_update(Elf *, Elf_Cmd);
off_t		_elf_update(Elf *, Elf_Cmd);
unsigned	elf_version(unsigned);
unsigned	_elf_version(unsigned);
int		nlist(const char *, struct nlist *);



/*
 * Private Symbols
 */
Elf64_Off	_elf_getxoff(Elf_Data *);
