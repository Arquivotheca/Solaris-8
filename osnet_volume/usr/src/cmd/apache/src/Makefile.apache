##
##  Apache Makefile, automatically generated by Configure script.
##  Hand-edited changes will be lost if the Configure script is re-run.
##  Sources: - ./Makefile.config (via Configuration.apaci)
##           - ./Makefile.tmpl
##

MODULES= \
  modules/standard/libstandard.a

SUBDIRS=os/unix ap main lib modules
SUBTARGET=target_static
SHLIB_SUFFIX_NAME=so
SHLIB_SUFFIX_LIST=
SHLIB_EXPORT_FILES=no

##
##  Inherited Makefile options from Configure script
##  (Begin of automatically generated section)
##
SRCDIR=.
EXTRA_CFLAGS=-xO3 -xspace `$(SRCDIR)/apaci`
EXTRA_LDFLAGS=
EXTRA_LIBS=
EXTRA_INCLUDES=
EXTRA_DEPS=
CC=cc
CFLAGS_SHLIB=-G -Kpic
OSDIR=$(SRCDIR)/os/unix
INCDIR=$(SRCDIR)/include
INCLUDES0=-I$(OSDIR) -I$(INCDIR)
SHELL=/bin/sh
CPP=cc -E
TARGET=httpd
OPTIM=
PERL=perl
PERL_CC=cc
PERL_OPTIMIZE=-xO3 -xdepend
PERL_CCFLAGS=
PERL_CCCDLFLAGS=-KPIC
PERL_DEFS= -DMOD_PERL_VERSION=\"1.21\" -DMOD_PERL_STRING_VERSION=\"mod_perl/1.21\"
PERL_INC= -I/usr/perl5/5.00503/sun4-solaris/CORE 
PERL_LD=cc
PERL_LDFLAGS=
PERL_LDDLFLAGS=-G
PERL_LIBS=-R /usr/perl5/5.00503/sun4-solaris/CORE  /usr/perl5/5.00503/sun4-solaris/auto/DynaLoader/DynaLoader.a -L/usr/perl5/5.00503/sun4-solaris/CORE -lperl -lsocket -lnsl -ldl -lm -lc -lcrypt 
PERL_XSINIT=perl -MExtUtils::Embed -e xsinit
PERL_XSUBPP=perl /usr/perl5/5.00503/ExtUtils/xsubpp -typemap /usr/perl5/5.00503/ExtUtils/typemap
PERL_AR=ar
PERL_RANLIB=:
PERL_STATIC_EXTS=Apache Apache::Constants Apache::ModuleConfig Apache::Log Apache::URI Apache::Util Apache::Connection Apache::Server Apache::File Apache::Table 
PERL_STATIC_AR=
PERL_STATIC_SRCS=Apache.c Constants.c ModuleConfig.c Log.c URI.c Util.c Connection.c Server.c File.c Table.c
PERL_STATIC_OBJS=Apache.o Constants.o ModuleConfig.o Log.o URI.o Util.o Connection.o Server.o File.o Table.o
PERL_STATIC_OBJS_PIC=Apache.lo Constants.lo ModuleConfig.lo Log.lo URI.lo Util.lo Connection.lo Server.lo File.lo Table.lo
PERL_SSI=yes
LD_SHLIB=ld
LDFLAGS_SHLIB=-G
LDFLAGS_SHLIB_EXPORT=
LDFLAGS_MOD_SHLIB=-G
LD_SHCORE_DEF=
LD_SHCORE_LIBS=
SHARED_CORE_EP=lib$(TARGET).ep
SHCORE_IMPLIB=
CFLAGS1= -DSOLARIS2=280 -DMOD_PERL -DUSE_EXPAT -I$(SRCDIR)/lib/expat-lite
INCLUDES1=
LIBS_SHLIB=
LDFLAGS1=
MFLAGS_STATIC=
REGLIB=
EXPATLIB=lib/expat-lite/libexpat.a
RANLIB=ranlib
LIBS1=  -lsocket -lnsl -ldl
##
##  (End of automatically generated section)
##


CFLAGS=$(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
LIBS=$(EXTRA_LIBS) $(LIBS1)
INCLUDES=$(INCLUDES1) $(INCLUDES0) $(EXTRA_INCLUDES)
LDFLAGS=$(LDFLAGS1) $(EXTRA_LDFLAGS)

OBJS= \
  modules.o \
  $(MODULES) \
  main/libmain.a \
  $(OSDIR)/libos.a \
  ap/libap.a

.c.o:
	$(CC) -c $(INCLUDES) $(CFLAGS) $<

# Used to generate import library for OS/2
.SUFFIXES: .def
.def.a:
	emximp -o $@ $<

all: Configuration.apaci $(TARGET)

Configuration.apaci: Configuration.tmpl
	@echo "++ File 'Configuration.apaci' older than 'Configuration.tmpl',"
	@echo "++ or still doesn't exist. Please consider copying 'Configuration.tmpl'"
	@echo "++ to 'Configuration.apaci', editing and rerunning 'Configure'."
	@echo "++ If not, you will at least have to touch 'Configuration.apaci'."
	@false

$(TARGET): $(EXTRA_DEPS) $(SUBTARGET)

target_static: subdirs modules.o
	$(CC) -c $(INCLUDES) $(CFLAGS) buildmark.c
	$(CC) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) \
	      -o $(TARGET) buildmark.o $(OBJS) $(REGLIB) $(EXPATLIB) $(LIBS)

target_compile_only: subdirs modules.o
	$(CC) -c $(INCLUDES) $(CFLAGS) buildmark.c

target_shared: $(SHCORE_IMPLIB) $(SHARED_CORE_EP) lib$(TARGET).$(SHLIB_SUFFIX_NAME)
	$(CC) $(INCLUDES) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) \
	      -o $(TARGET) -DSHARED_CORE_BOOTSTRAP main/http_main.c \
	      ap/libap.a $(LIBS) $(SHCORE_IMPLIB)

lib$(TARGET).ep: lib$(TARGET).$(SHLIB_SUFFIX_NAME)
	$(CC) $(INCLUDES) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) \
	      -o lib$(TARGET).ep -DSHARED_CORE_TIESTATIC main/http_main.c \
		  -L. -l$(TARGET) $(LIBS)

lib$(TARGET).$(SHLIB_SUFFIX_NAME): subdirs modules.o
	$(CC) -c $(INCLUDES) $(CFLAGS) buildmark.c
	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o lib$(TARGET).$(SHLIB_SUFFIX_NAME) buildmark.o $(OBJS) $(REGLIB) $(EXPATLIB) $(LD_SHCORE_DEF) $(LD_SHCORE_LIBS)
	@if [ ".$(SHLIB_SUFFIX_LIST)" != . ]; then \
		rm -f lib$(TARGET).$(SHLIB_SUFFIX_NAME).*; \
		for suffix in $(SHLIB_SUFFIX_LIST) ""; do \
			[ ".$$suffix" = . ] && continue; \
		    echo "ln lib$(TARGET).$(SHLIB_SUFFIX_NAME) lib$(TARGET).$(SHLIB_SUFFIX_NAME).$$suffix"; \
		    ln lib$(TARGET).$(SHLIB_SUFFIX_NAME) lib$(TARGET).$(SHLIB_SUFFIX_NAME).$$suffix; \
		done; \
	fi

subdirs:
	@for i in $(SUBDIRS); do \
		echo "===> $(SDP)$$i"; \
		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)') || exit 1; \
		echo "<=== $(SDP)$$i"; \
	done

support: support-dir

support-dir:
	@echo "===> $(SDP)support"; \
	cd support; $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)'; \
	echo "<=== $(SDP)support"

clean:
	-rm -f $(TARGET) lib$(TARGET).* *.o
	@for i in $(SUBDIRS); do \
		echo "===> $(SDP)$$i"; \
		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' $@ ) || exit 1; \
		echo "<=== $(SDP)$$i"; \
	done

distclean:
	-rm -f $(TARGET) lib$(TARGET).* *.o
	@for i in $(SUBDIRS); do \
		echo "===> $(SDP)$$i"; \
		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' $@ ) || exit 1; \
		echo "<=== $(SDP)$$i"; \
	done
	-rm -f include/ap_config_auto.h
	-rm -f modules.c
	-rm -f modules/Makefile
	-rm -f regex/Makefile
	-rm -f lib/Makefile
	-rm -f Makefile.config
	-rm -f Makefile

install:
	@echo "++ Sorry, no installation procedure available at this level."
	@echo "++ Go to the parent directory for an 'install' target."

# We really don't expect end users to use this rule.  It works only with
# gcc, and rebuilds Makefile.tmpl.  You have to re-run Configure after
# using it.
depend:
	cp Makefile.tmpl Makefile.tmpl.bak \
	    && sed -ne '1,/^# DO NOT REMOVE/p' Makefile.tmpl > Makefile.new \
	    && gcc -MM $(INCLUDES) $(CFLAGS) *.c >> Makefile.new \
	    && sed -e '1,$$s: $(INCDIR)/: $$(INCDIR)/:g' \
	           -e '1,$$s: $(OSDIR)/: $$(OSDIR)/:g' Makefile.new \
		> Makefile.tmpl \
	    && rm Makefile.new
	for i in $(SUBDIRS); do \
	    ( cd $$i && $(MAKE) CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)' depend ) || exit 1; \
	done

#Dependencies

$(OBJS): Makefile subdirs

# DO NOT REMOVE
buildmark.o: buildmark.c include/ap_config.h include/ap_mmn.h \
 include/ap_config_auto.h os/unix/os.h include/ap_ctype.h \
 include/hsregex.h include/httpd.h include/alloc.h include/buff.h \
 include/ap.h include/util_uri.h
modules.o: modules.c include/httpd.h include/ap_config.h \
 include/ap_mmn.h include/ap_config_auto.h os/unix/os.h \
 include/ap_ctype.h include/hsregex.h include/alloc.h include/buff.h \
 include/ap.h include/util_uri.h include/http_config.h
