#!/bin/sh
#
# Copyright (c) 1997-1998 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident	"@(#)i.initd	1.4	98/06/15 SMI"
#
# i.initd - Class action script for /etc/init.d script files.
# 
# This class action script handles the issue of delivering a new version of
# an /etc/init.d script with a new set of [SK][0-9][0-9] links (or in non-glob
# terms, a new set of start and/or kill number links).  It assumes that
# the package prototype file has been set up so that we have a set of
# entries similar to the following:
# 
#	e initd etc/init.d/syslog 744 root sys
#	l initd etc/rc0.d/K40syslog=../../etc/init.d/syslog
#	l initd etc/rc1.d/K40syslog=../../etc/init.d/syslog
#	l initd etc/rc2.d/S74syslog=../../etc/init.d/syslog
#	l initd etc/rcS.d/K40syslog=../../etc/init.d/syslog
#
# Note that the script file (/etc/init.d/syslog) is marked as type 'e' for
# editable so that this script is invoked during both install and upgrade.
# The S and K scripts are installed as hard links to the /etc/init.d/ file.
# Since all the files are specified as class 'initd', we know that this
# script will first be invoked for all the 'e' files, and then for the links.
# We are responsible for copying over the 'e' files, and installf creates
# the hard links for us.
#
# Since we know that pkgadd will call installf to add the 'l' links last,
# our goal is to remove all existing or likely links to each /etc/init.d/ file
# we are asked to install.  In order to locate existing S and K links, we use
# two algorithms: (1) If the destination file exists and has a > 1 link count,
# we scan the /etc directory (relative to the destination file) for files with
# the same inode number whose names begin with [SK][0-9][0-9] and remove them.
# (2) If the the destination file exists, we remove all files in /etc/rc?.d
# whose names are [SK][0-9][0-9] followed by the basename of the destination
# file.  Step (2) is needed because we may have mistakenly delivered the file
# earlier as a symbolic link, or because a system administrator may have
# mistakenly unlinked the /etc/init.d script from its S or K counterpart.
#
# For each file we wish to remove, we need to first ask removef if it's ok
# to remove, and then remove it, and finally call removef -f to update the
# software database.  With that complete, we then invoke installf to
# install all of the 'l' links in the 'initd' class specified in the pkgmap
# file.  This step is necessary because during upgrade, pkgadd will not
# invoke this script for 'l' links, since it has no concept of an 'editable'
# link which is changing during an upgrade.
#
# Before we begin installing new files, we need to save the existing files
# if the administrator has modified them since their original installation,
# To do this, we find 'e' and 'l' entries in the pkgmap, convert their
# relative "etc/" prefix to /etc, and them pipe them into pkgchk.  For
# each file which already exists and whose contents do not match the size or
# checksum saved in the package database, we get (^ = start of line):
#
#	^ERROR: /etc/init.d/somefile
#	^    file size <104780> expected <181> actual
# 	^    file cksum <56515> expected <14331> actual
#
# We grep for ERROR: followed by a single non-whitespace token, strip the
# leading '^ERROR: ', and pipe these names into a loop where we save the
# old version and echo a magic token out to the /tmp/CLEANUP file.  This
# will result in an internationalized message being written to the upgrade
# log /var/sadm/install_data/upgrade_cleanup.  For more on the details of
# /tmp/CLEANUP, refer back to PSARC 1992/118.

REMOVEF=removef
INSTALLF=installf
CLEANUP=/tmp/CLEANUP

if [ "x$UPDATE" = xyes ]; then
	awk '($2 == "e" || $2 == "l") && $3 == "initd" {print $4}' \
	  $INST_DATADIR/$PKG/pkgmap | sed -e 's:^etc/:/etc/:' -e 's/=.*$//' | \
          pkgchk -R ${PKG_INSTALL_ROOT:-/} -q -i /dev/stdin $PKG 2>&1 | \
	  grep '^ERROR: [^ 	]*$' | sed 's/^ERROR: //' | \
	while read ofile; do
		case "`basename $ofile`" in
		[SK][0-9]*)
			nfile="`dirname $ofile`/_`basename $ofile`.old" ;;
		*)
			nfile="${ofile}.old" ;;
		esac
		if [ -f $ofile ]; then
			cp -p $ofile $nfile
			echo "EXISTING_FILE_RENAMED: $ofile $nfile" >>$CLEANUP
		fi
	done
fi

# Now read the standard input to the class-action script (this will be
# the list of 'e' editable files corresponding to the /etc/init.d/scripts),
# remove the corresponding hard links in the /etc/rc?.d directories, and
# install the new version of each init.d script.

while read src dst; do
	dstname=`basename $dst`
	case "$dstname" in

	[SK][0-9]*)
		# If this item is the link, the additional hard link to the
		# /etc/init.d file will be created by installf so we do not
		# need to do anything here.
		;;

	acct|dhcp)
		# By default (the '*' case below) we're going to remove all
		# links to each /etc/init.d script.  There are two exceptions
		# to this rule: links to /etc/init.d/dhcp and /etc/init.d/acct.
		# We don't ship any links to those scripts; if links are
		# present, the administrator has created them in order to
		# enable DHCP or accounting, and we want to leave them enabled.

		cp -p $src $dst
		;;

	*)
		# If this item is the script, then remove any existing links
		# and then copy the contents from $src to $dst

		if [ -f $dst ]; then
			shift $#
			set -- `ls -li $dst 2>/dev/null`
			inode=${1:-0}; nlink=${3:-0}

			(

			if [ $nlink -gt 1 ]; then
				find $PKG_INSTALL_ROOT/etc/rc?.d -mount \
				    -type f -inum $inode \
				    -name '[SK][0-9][0-9]*' -print
			fi
			echo $PKG_INSTALL_ROOT/etc/rc?.d/[SK][0-9][0-9]$dstname

			) | xargs $REMOVEF $PKGINST 2>/dev/null | xargs rm -f
		fi

		cp -p $src $dst
		;;
	esac
done

# Complete the removal operations specified in the loop above

$REMOVEF -f $PKGINST || exit 2

# Now find all the hard links for the initd class in the package map
# and make sure they get recreated.  In the case of hard links, installf
# takes care of updating the database *and* creating the links.  We need
# to tweak the source and destination of the link to be absolute paths.
# Installf will convert these to be relative to $PKG_INSTALL_ROOT, which
# it inherits through the environment.

awk '$2 == "l" && $3 =="initd" {print $4, $2}' $INST_DATADIR/$PKG/pkgmap | \
  sed -e 's:^etc/:/etc/:' -e "s:=\.\./\.\./etc/:=/etc/:" | \
  $INSTALLF -c initd $PKGINST - && exit 0 || exit 2
